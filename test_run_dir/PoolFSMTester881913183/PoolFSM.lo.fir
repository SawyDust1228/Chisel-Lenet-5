circuit PoolFSM : @[:@2.0]
  module PoolFSM : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    output io_output : UInt<1> @[:@6.4]
    output io_finish : UInt<1> @[:@6.4]
    output io_outState : UInt<32> @[:@6.4]
    output io_outCounter : UInt<32> @[:@6.4]
  
    reg state : UInt<2>, clock with :
      reset => (UInt<1>("h0"), state) @[PoolFSM.scala 15:22:@8.4]
    reg count : UInt<32>, clock with :
      reset => (UInt<1>("h0"), count) @[PoolFSM.scala 16:22:@9.4]
    reg numCounter : UInt<32>, clock with :
      reset => (UInt<1>("h0"), numCounter) @[PoolFSM.scala 17:27:@10.4]
    reg stallCounter : UInt<32>, clock with :
      reset => (UInt<1>("h0"), stallCounter) @[PoolFSM.scala 18:29:@11.4]
    node _T_20 = eq(UInt<2>("h0"), state) @[Conditional.scala 37:30:@12.4]
    node _T_23 = sub(UInt<2>("h2"), UInt<1>("h1")) @[PoolFSM.scala 22:35:@14.6]
    node _T_24 = asUInt(_T_23) @[PoolFSM.scala 22:35:@15.6]
    node _T_25 = tail(_T_24, 1) @[PoolFSM.scala 22:35:@16.6]
    node _T_26 = eq(count, _T_25) @[PoolFSM.scala 22:18:@17.6]
    node _T_28 = add(numCounter, UInt<1>("h1")) @[PoolFSM.scala 24:34:@20.8]
    node _T_29 = tail(_T_28, 1) @[PoolFSM.scala 24:34:@21.8]
    node _T_31 = add(count, UInt<1>("h1")) @[PoolFSM.scala 26:24:@25.8]
    node _T_32 = tail(_T_31, 1) @[PoolFSM.scala 26:24:@26.8]
    node _GEN_0 = mux(_T_26, UInt<2>("h1"), UInt<2>("h0")) @[PoolFSM.scala 22:43:@18.6]
    node _GEN_1 = mux(_T_26, _T_29, numCounter) @[PoolFSM.scala 22:43:@18.6]
    node _GEN_2 = mux(_T_26, count, _T_32) @[PoolFSM.scala 22:43:@18.6]
    node _T_33 = eq(UInt<2>("h1"), state) @[Conditional.scala 37:30:@32.6]
    node _T_36 = mul(UInt<4>("h8"), UInt<4>("h8")) @[PoolFSM.scala 31:42:@34.8]
    node _T_39 = mul(UInt<2>("h2"), UInt<2>("h2")) @[PoolFSM.scala 31:72:@35.8]
    node _T_40 = div(_T_36, _T_39) @[PoolFSM.scala 31:57:@36.8]
    node _T_41 = eq(numCounter, _T_40) @[PoolFSM.scala 31:23:@37.8]
    node _GEN_3 = mux(_T_41, UInt<2>("h3"), UInt<2>("h2")) @[PoolFSM.scala 31:90:@38.8]
    node _GEN_4 = mux(_T_41, stallCounter, UInt<1>("h1")) @[PoolFSM.scala 31:90:@38.8]
    node _T_43 = eq(UInt<2>("h2"), state) @[Conditional.scala 37:30:@47.8]
    node _T_46 = sub(UInt<2>("h2"), UInt<1>("h1")) @[PoolFSM.scala 39:41:@49.10]
    node _T_47 = asUInt(_T_46) @[PoolFSM.scala 39:41:@50.10]
    node _T_48 = tail(_T_47, 1) @[PoolFSM.scala 39:41:@51.10]
    node _T_49 = eq(stallCounter, _T_48) @[PoolFSM.scala 39:25:@52.10]
    node _T_51 = add(stallCounter, UInt<1>("h1")) @[PoolFSM.scala 42:38:@57.12]
    node _T_52 = tail(_T_51, 1) @[PoolFSM.scala 42:38:@58.12]
    node _GEN_5 = mux(_T_49, UInt<2>("h1"), UInt<2>("h2")) @[PoolFSM.scala 39:48:@53.10]
    node _GEN_6 = mux(_T_49, stallCounter, _T_52) @[PoolFSM.scala 39:48:@53.10]
    node _T_53 = eq(UInt<2>("h3"), state) @[Conditional.scala 37:30:@64.10]
    node _GEN_7 = mux(_T_53, UInt<2>("h3"), state) @[Conditional.scala 39:67:@65.10]
    node _GEN_8 = mux(_T_43, _GEN_5, _GEN_7) @[Conditional.scala 39:67:@48.8]
    node _GEN_9 = mux(_T_43, _GEN_6, stallCounter) @[Conditional.scala 39:67:@48.8]
    node _GEN_10 = mux(_T_33, _GEN_3, _GEN_8) @[Conditional.scala 39:67:@33.6]
    node _GEN_11 = mux(_T_33, _GEN_4, _GEN_9) @[Conditional.scala 39:67:@33.6]
    node _GEN_12 = mux(_T_20, _GEN_0, _GEN_10) @[Conditional.scala 40:58:@13.4]
    node _GEN_13 = mux(_T_20, _GEN_1, numCounter) @[Conditional.scala 40:58:@13.4]
    node _GEN_14 = mux(_T_20, _GEN_2, count) @[Conditional.scala 40:58:@13.4]
    node _GEN_15 = mux(_T_20, stallCounter, _GEN_11) @[Conditional.scala 40:58:@13.4]
    node _T_54 = eq(state, UInt<2>("h0")) @[PoolFSM.scala 51:14:@68.4]
    node _T_58 = eq(state, UInt<2>("h1")) @[PoolFSM.scala 55:20:@75.6]
    node _T_63 = add(numCounter, UInt<1>("h1")) @[PoolFSM.scala 59:30:@80.8]
    node _T_64 = tail(_T_63, 1) @[PoolFSM.scala 59:30:@81.8]
    node _T_65 = eq(state, UInt<2>("h2")) @[PoolFSM.scala 60:20:@85.8]
    node _GEN_16 = mux(_T_65, UInt<1>("h0"), UInt<1>("h0")) @[PoolFSM.scala 60:37:@86.8]
    node _GEN_17 = mux(_T_65, UInt<1>("h0"), UInt<1>("h1")) @[PoolFSM.scala 60:37:@86.8]
    node _GEN_18 = mux(_T_65, UInt<2>("h3"), UInt<3>("h4")) @[PoolFSM.scala 60:37:@86.8]
    node _GEN_19 = mux(_T_58, UInt<1>("h1"), _GEN_16) @[PoolFSM.scala 55:35:@76.6]
    node _GEN_20 = mux(_T_58, UInt<1>("h0"), _GEN_17) @[PoolFSM.scala 55:35:@76.6]
    node _GEN_21 = mux(_T_58, UInt<2>("h2"), _GEN_18) @[PoolFSM.scala 55:35:@76.6]
    node _GEN_22 = mux(_T_58, _T_64, _GEN_13) @[PoolFSM.scala 55:35:@76.6]
    node _GEN_23 = mux(_T_54, UInt<1>("h0"), _GEN_19) @[PoolFSM.scala 51:26:@69.4]
    node _GEN_24 = mux(_T_54, UInt<1>("h0"), _GEN_20) @[PoolFSM.scala 51:26:@69.4]
    node _GEN_25 = mux(_T_54, UInt<1>("h1"), _GEN_21) @[PoolFSM.scala 51:26:@69.4]
    node _GEN_26 = mux(_T_54, _GEN_13, _GEN_22) @[PoolFSM.scala 51:26:@69.4]
    io_output <= _GEN_23 @[PoolFSM.scala 52:15:@70.6 PoolFSM.scala 56:15:@77.8 PoolFSM.scala 61:15:@87.10 PoolFSM.scala 65:15:@92.10]
    io_finish <= _GEN_24 @[PoolFSM.scala 53:15:@71.6 PoolFSM.scala 57:15:@78.8 PoolFSM.scala 62:15:@88.10 PoolFSM.scala 66:15:@93.10]
    io_outState <= _GEN_25 @[PoolFSM.scala 54:17:@72.6 PoolFSM.scala 58:17:@79.8 PoolFSM.scala 63:17:@89.10 PoolFSM.scala 67:17:@94.10]
    io_outCounter <= count @[PoolFSM.scala 70:17:@96.4]
    state <= mux(reset, UInt<2>("h0"), _GEN_12) @[PoolFSM.scala 23:15:@19.8 PoolFSM.scala 27:15:@28.8 PoolFSM.scala 32:15:@39.10 PoolFSM.scala 34:15:@42.10 PoolFSM.scala 40:15:@54.12 PoolFSM.scala 43:15:@60.12 PoolFSM.scala 47:13:@66.12]
    count <= mux(reset, UInt<32>("h1"), _GEN_14) @[PoolFSM.scala 26:15:@27.8]
    numCounter <= mux(reset, UInt<32>("h0"), _GEN_26) @[PoolFSM.scala 24:20:@22.8 PoolFSM.scala 59:16:@82.8]
    stallCounter <= mux(reset, UInt<32>("h0"), _GEN_15) @[PoolFSM.scala 35:22:@43.10 PoolFSM.scala 42:22:@59.12]
