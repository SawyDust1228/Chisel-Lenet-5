circuit ReluFSM : @[:@2.0]
  module ReluFSM : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_totalNum : UInt<32> @[:@6.4]
    output io_output : UInt<1> @[:@6.4]
    output io_finish : UInt<1> @[:@6.4]
    output io_outState : UInt<32> @[:@6.4]
    output io_outCounter : UInt<32> @[:@6.4]
  
    reg state : UInt<2>, clock with :
      reset => (UInt<1>("h0"), state) @[ReluFSM.scala 16:22:@8.4]
    reg counter : UInt<32>, clock with :
      reset => (UInt<1>("h0"), counter) @[ReluFSM.scala 17:24:@9.4]
    node _T_18 = eq(UInt<2>("h0"), state) @[Conditional.scala 37:30:@10.4]
    node _T_20 = add(counter, UInt<1>("h1")) @[ReluFSM.scala 21:26:@12.6]
    node _T_21 = tail(_T_20, 1) @[ReluFSM.scala 21:26:@13.6]
    node _T_22 = eq(UInt<2>("h1"), state) @[Conditional.scala 37:30:@18.6]
    node _T_23 = eq(counter, io_totalNum) @[ReluFSM.scala 26:20:@20.8]
    node _T_25 = add(counter, UInt<1>("h1")) @[ReluFSM.scala 29:28:@25.10]
    node _T_26 = tail(_T_25, 1) @[ReluFSM.scala 29:28:@26.10]
    node _GEN_0 = mux(_T_23, UInt<2>("h2"), state) @[ReluFSM.scala 26:37:@21.8]
    node _GEN_1 = mux(_T_23, counter, _T_26) @[ReluFSM.scala 26:37:@21.8]
    node _T_27 = eq(UInt<2>("h2"), state) @[Conditional.scala 37:30:@31.8]
    node _GEN_2 = mux(_T_27, state, state) @[Conditional.scala 39:67:@32.8]
    node _GEN_3 = mux(_T_22, _GEN_0, _GEN_2) @[Conditional.scala 39:67:@19.6]
    node _GEN_4 = mux(_T_22, _GEN_1, counter) @[Conditional.scala 39:67:@19.6]
    node _GEN_5 = mux(_T_18, _T_21, _GEN_4) @[Conditional.scala 40:58:@11.4]
    node _GEN_6 = mux(_T_18, UInt<2>("h1"), _GEN_3) @[Conditional.scala 40:58:@11.4]
    node _T_28 = eq(state, UInt<2>("h0")) @[ReluFSM.scala 38:14:@35.4]
    node _T_32 = eq(state, UInt<2>("h1")) @[ReluFSM.scala 42:20:@42.6]
    node _GEN_7 = mux(_T_32, UInt<1>("h0"), UInt<1>("h1")) @[ReluFSM.scala 42:35:@43.6]
    node _GEN_8 = mux(_T_32, UInt<1>("h1"), UInt<1>("h0")) @[ReluFSM.scala 42:35:@43.6]
    node _GEN_9 = mux(_T_32, UInt<2>("h2"), UInt<2>("h3")) @[ReluFSM.scala 42:35:@43.6]
    node _GEN_10 = mux(_T_28, UInt<1>("h0"), _GEN_7) @[ReluFSM.scala 38:26:@36.4]
    node _GEN_11 = mux(_T_28, UInt<1>("h1"), _GEN_8) @[ReluFSM.scala 38:26:@36.4]
    node _GEN_12 = mux(_T_28, UInt<1>("h1"), _GEN_9) @[ReluFSM.scala 38:26:@36.4]
    io_output <= _GEN_11 @[ReluFSM.scala 40:15:@38.6 ReluFSM.scala 44:15:@45.8 ReluFSM.scala 48:15:@50.8]
    io_finish <= _GEN_10 @[ReluFSM.scala 39:15:@37.6 ReluFSM.scala 43:15:@44.8 ReluFSM.scala 47:15:@49.8]
    io_outState <= _GEN_12 @[ReluFSM.scala 41:17:@39.6 ReluFSM.scala 45:17:@46.8 ReluFSM.scala 49:17:@51.8]
    io_outCounter <= counter @[ReluFSM.scala 51:17:@53.4]
    state <= mux(reset, UInt<2>("h0"), _GEN_6) @[ReluFSM.scala 22:13:@15.6 ReluFSM.scala 27:15:@22.10 ReluFSM.scala 34:13:@33.10]
    counter <= mux(reset, UInt<32>("h1"), _GEN_5) @[ReluFSM.scala 21:15:@14.6 ReluFSM.scala 29:17:@27.10]
