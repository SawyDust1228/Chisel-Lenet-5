;buildInfoPackage: chisel3, version: 3.1.2, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2018-07-25 16:52:17.431, builtAtMillis: 1532537537431
circuit ReluFSM : 
  module ReluFSM : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip totalNum : UInt<32>, output : UInt<1>, finish : UInt<1>, outState : UInt<32>, outCounter : UInt<32>}
    
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[ReluFSM.scala 16:22]
    reg counter : UInt<32>, clock with : (reset => (reset, UInt<32>("h01"))) @[ReluFSM.scala 17:24]
    node _T_18 = eq(UInt<2>("h00"), state) @[Conditional.scala 37:30]
    when _T_18 : @[Conditional.scala 40:58]
      node _T_20 = add(counter, UInt<1>("h01")) @[ReluFSM.scala 21:26]
      node _T_21 = tail(_T_20, 1) @[ReluFSM.scala 21:26]
      counter <= _T_21 @[ReluFSM.scala 21:15]
      state <= UInt<2>("h01") @[ReluFSM.scala 22:13]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_22 = eq(UInt<2>("h01"), state) @[Conditional.scala 37:30]
      when _T_22 : @[Conditional.scala 39:67]
        node _T_23 = eq(counter, io.totalNum) @[ReluFSM.scala 26:20]
        when _T_23 : @[ReluFSM.scala 26:37]
          state <= UInt<2>("h02") @[ReluFSM.scala 27:15]
          skip @[ReluFSM.scala 26:37]
        else : @[ReluFSM.scala 28:19]
          node _T_25 = add(counter, UInt<1>("h01")) @[ReluFSM.scala 29:28]
          node _T_26 = tail(_T_25, 1) @[ReluFSM.scala 29:28]
          counter <= _T_26 @[ReluFSM.scala 29:17]
          skip @[ReluFSM.scala 28:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_27 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
        when _T_27 : @[Conditional.scala 39:67]
          state <= state @[ReluFSM.scala 34:13]
          skip @[Conditional.scala 39:67]
    node _T_28 = eq(state, UInt<2>("h00")) @[ReluFSM.scala 38:14]
    when _T_28 : @[ReluFSM.scala 38:26]
      io.finish <= UInt<1>("h00") @[ReluFSM.scala 39:15]
      io.output <= UInt<1>("h01") @[ReluFSM.scala 40:15]
      io.outState <= UInt<1>("h01") @[ReluFSM.scala 41:17]
      skip @[ReluFSM.scala 38:26]
    else : @[ReluFSM.scala 42:35]
      node _T_32 = eq(state, UInt<2>("h01")) @[ReluFSM.scala 42:20]
      when _T_32 : @[ReluFSM.scala 42:35]
        io.finish <= UInt<1>("h00") @[ReluFSM.scala 43:15]
        io.output <= UInt<1>("h01") @[ReluFSM.scala 44:15]
        io.outState <= UInt<2>("h02") @[ReluFSM.scala 45:17]
        skip @[ReluFSM.scala 42:35]
      else : @[ReluFSM.scala 46:15]
        io.finish <= UInt<1>("h01") @[ReluFSM.scala 47:15]
        io.output <= UInt<1>("h00") @[ReluFSM.scala 48:15]
        io.outState <= UInt<2>("h03") @[ReluFSM.scala 49:17]
        skip @[ReluFSM.scala 46:15]
    io.outCounter <= counter @[ReluFSM.scala 51:17]
    
